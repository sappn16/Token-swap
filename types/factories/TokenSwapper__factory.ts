/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenSwapper, TokenSwapperInterface } from "../TokenSwapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isV2",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "i",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "j",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenSwapper.CurvePoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "AddCurvePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddTokenSupport",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct TokenSwapper.UniswapV3PoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "AddUniswapV3Pool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isV2",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "i",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "j",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenSwapper.CurvePoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "RemoveCurvePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct TokenSwapper.UniswapV3PoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "RemoveUniswapV3Pool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "TokenSwap",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
    ],
    name: "_calculateBestRoute0",
    outputs: [
      {
        internalType: "uint256",
        name: "outAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "enum TokenSwapper.Protocol",
            name: "protocol",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct TokenSwapper.SwapPath[]",
        name: "path",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
    ],
    name: "_calculateBestRoute1",
    outputs: [
      {
        internalType: "uint256",
        name: "outAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "enum TokenSwapper.Protocol",
            name: "protocol",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct TokenSwapper.SwapPath[]",
        name: "path",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isV2",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "i",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "j",
            type: "uint256",
          },
        ],
        internalType: "struct TokenSwapper.CurvePoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "addCurvePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addTokenSupport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct TokenSwapper.UniswapV3PoolSetting",
        name: "setting",
        type: "tuple",
      },
    ],
    name: "addUniswapV3Pool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "calculateBestRoute",
    outputs: [
      {
        internalType: "uint256",
        name: "expectedUsdtAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "enum TokenSwapper.Protocol",
            name: "protocol",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct TokenSwapper.SwapPath[]",
        name: "path",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "curvePools",
    outputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isV2",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "j",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "enum TokenSwapper.Protocol",
            name: "protocol",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct TokenSwapper.SwapPath[]",
        name: "path",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "minOutAmount",
        type: "uint256",
      },
    ],
    name: "executeSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeCurvePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeUniswapV3Pool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minUSDTAmount",
        type: "uint256",
      },
    ],
    name: "swapETHToUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uniswapV3Pools",
    outputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61321180620000836000396000f3fe6080604052600436106100e05760003560e01c80638e4babd711610084578063b95f6ba111610056578063b95f6ba11461028b578063c8eb1d4d146102ab578063f2fde38b146102cb578063f4da8750146102eb57005b80638e4babd714610218578063997faf351461022b578063a1a4e1661461024b578063aedcbe7c1461026b57005b8063733c237d116100bd578063733c237d146101585780637628c03c14610178578063875de54c146101c25780638da5cb5b146101f057005b80630ff49c95146100e9578063251644ff14610122578063715018a61461014357005b366100e757005b005b3480156100f557600080fd5b50610109610104366004612bcd565b61030b565b60405162ffffff90911681526020015b60405180910390f35b610135610130366004612c09565b61034c565b604051908152602001610119565b34801561014f57600080fd5b506100e7610505565b34801561016457600080fd5b506100e7610173366004612c2b565b61056b565b34801561018457600080fd5b50610198610193366004612bcd565b610610565b604080516001600160a01b0390951685529215156020850152918301526060820152608001610119565b3480156101ce57600080fd5b506101e26101dd366004612bcd565b610674565b604051610119929190612c5c565b3480156101fc57600080fd5b506000546040516001600160a01b039091168152602001610119565b610135610226366004612d8b565b6107e3565b34801561023757600080fd5b506100e7610246366004612e98565b610a58565b34801561025757600080fd5b506100e7610266366004612bcd565b610c26565b34801561027757600080fd5b506100e7610286366004612f20565b610e1e565b34801561029757600080fd5b506101e26102a6366004612bcd565b610f5f565b3480156102b757600080fd5b506101e26102c6366004612fac565b6117be565b3480156102d757600080fd5b506100e76102e6366004612c2b565b61184a565b3480156102f757600080fd5b506100e7610306366004612bcd565b61192c565b6002602052826000526040600020602052816000526040600020818154811061033357600080fd5b60009182526020909120015462ffffff16925083915050565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b505050505060006103c1846117be565b9150506103cd81611be1565b6040516370a0823160e01b815230600482015273dac17f958d2ee523a2206206994597c13d831ec7906370a0823190602401602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104409190612fc5565b9150818311156104835760405162461bcd60e51b8152602060048201526009602482015268736c6970706167652160b81b60448201526064015b60405180910390fd5b6104a273dac17f958d2ee523a2206206994597c13d831ec73384612744565b604080516000815273dac17f958d2ee523a2206206994597c13d831ec76020820152908101859052606081018390527f1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f9060800160405180910390a15092915050565b6000546001600160a01b0316331461055f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b61056960006127da565b565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6105d0600482612837565b506040516001600160a01b03821681527f2271c88f8d9ab9ec105918932baf4eb839c0c33ef243d3f86424c8702a3ba0709060200160405180910390a150565b6003602052826000526040600020602052816000526040600020818154811061063857600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b0382169550600160a01b90910460ff16935090915084565b60408051600280825260608281019093526000929190816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161068f57905050905060006106d16004612855565b905060005b818110156107d95760006106eb60048361285f565b9050806001600160a01b0316886001600160a01b0316148061071e5750806001600160a01b0316876001600160a01b0316145b1561072957506107d1565b6000806107378a848a610f5f565b91509150600080610749858c86610f5f565b91509150888211156107cb578198508260008151811061076b5761076b612fde565b60200260200101518860008151811061078657610786612fde565b6020026020010181905250806000815181106107a4576107a4612fde565b6020026020010151886001815181106107bf576107bf612fde565b60200260200101819052505b50505050505b6001016106d6565b5050935093915050565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03168360008151811061081657610816612fde565b6020026020010151600001516001600160a01b031614801561083757508334145b156108a95773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561088b57600080fd5b505af115801561089f573d6000803e3d6000fd5b50505050506108e7565b6108e7333086866000815181106108c2576108c2612fde565b6020026020010151600001516001600160a01b031661286b909392919063ffffffff16565b6108f083611be1565b600083600185516109019190612ff4565b8151811061091157610911612fde565b60209081029190910181015101516040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190612fc5565b9150818311156109c85760405162461bcd60e51b8152602060048201526009602482015268736c6970706167652160b81b604482015260640161047a565b6109dc6001600160a01b0382163384612744565b7f1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f84600081518110610a1057610a10612fde565b60209081029190910181015151604080516001600160a01b039283168152918516928201929092529081018790526060810184905260800160405180910390a1509392505050565b6000546001600160a01b03163314610ab25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6001600160a01b0383811660008181526003602081815260408084208887168086529083528185208054600180820183559187528487208a519187020180548b87018051938c1674ffffffffffffffffffffffffffffffffffffffffff1992831617600160a01b94151585021783558c8701805184870181905560608f01805160029687018190558352818152978c528a8a52888c209c8c529b8952968a2080548087018255908b52979099208c51979098029097018054985196909a16979096169690961793151590950292909217865551928501929092559051920191909155610b9f600485612837565b50610bab600484612837565b50604080516001600160a01b03808716825280861660208084019190915285519091168284015284015115156060808301919091529184015160808201529083015160a08201527f1fa3ce39ccd18842ab07292b4335ecab82babb81465315a05a398aad16acfe2e9060c0015b60405180910390a150505050565b6000546001600160a01b03163314610c805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6001600160a01b0380841660009081526002602090815260408083209386168352929052908120805483908110610cb957610cb9612fde565b60009182526020808320604080518084018252939091015462ffffff1683526001600160a01b038881168552600283528185209088168552909152909120805491925090610d0990600190612ff4565b81548110610d1957610d19612fde565b600091825260208083206001600160a01b0380891685526002835260408086209189168652925292208054929091019184908110610d5957610d59612fde565b60009182526020808320935493909101805462ffffff191662ffffff909416939093179092556001600160a01b0380871682526002835260408083209187168352925220805480610dac57610dac613015565b60008281526020908190206000199083018101805462ffffff19169055909101909155604080516001600160a01b038088168252861692810192909252825162ffffff16908201527f57230994fd0145b0b118854bce28889e46ecbc119edc4bef6e264c67a303487790606001610c18565b6000546001600160a01b03163314610e785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6001600160a01b03838116600081815260026020818152604080842095881680855295825280842080546001808201835591865283862089519101805462ffffff1990811662ffffff9384161790915597865293835281852095855294825283208054948501815583529091208451920180549093169116179055610efe600484612837565b50610f0a600483612837565b50604080516001600160a01b03858116825284166020820152825162ffffff168183015290517f93e07d3f9578526260e5a0252693a4a4995e7887e306cd47ce26500e619936f09181900360600190a1505050565b60408051600180825281830190925260009160609190816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610f7a5790505090508481600081518110610fc457610fc4612fde565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250508381600081518110610ffc57610ffc612fde565b6020908102919091018101516001600160a01b039290921691015260408051600280825260608201909252600091816020016020820280368337019050509050858160008151811061105057611050612fde565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061108457611084612fde565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b8152600090737a250d5630b4cf539739df2c5dacb4c659f2488d9063d06ca61f906110d89088908690600401613070565b600060405180830381865afa1580156110f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261111d9190810190613089565b9050806001825161112e9190612ff4565b8151811061113e5761113e612fde565b60200260200101518410156111bf57806001825161115c9190612ff4565b8151811061116c5761116c612fde565b6020026020010151935060008360008151811061118b5761118b612fde565b60200260200101516040019060038111156111a8576111a8612c46565b908160038111156111bb576111bb612c46565b9052505b505060408051600280825260608201835260009260208301908036833701905050905085816000815181106111f6576111f6612fde565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061122a5761122a612fde565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b815260009073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f9063d06ca61f9061127e9088908690600401613070565b600060405180830381865afa15801561129b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112c39190810190613089565b905080600182516112d49190612ff4565b815181106112e4576112e4612fde565b60200260200101518410156113655780600182516113029190612ff4565b8151811061131257611312612fde565b6020026020010151935060018360008151811061133157611331612fde565b602002602001015160400190600381111561134e5761134e612c46565b9081600381111561136157611361612c46565b9052505b50506001600160a01b0380861660009081526002602090815260408083209388168352929052908120905b81548110156114ec57600073b27308f9f90d607463bb33ea1bebb41c27ce5ab66001600160a01b031663f7729d4389898686815481106113d2576113d2612fde565b600091825260208220015460405160e086901b6001600160e01b03191681526001600160a01b03948516600482015293909216602484015262ffffff9091166044830152606482018a9052608482015260a4016020604051808303816000875af1158015611444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114689190612fc5565b9050808510156114e35780945060028460008151811061148a5761148a612fde565b60200260200101516040019060038111156114a7576114a7612c46565b908160038111156114ba576114ba612c46565b8152505081846000815181106114d2576114d2612fde565b602002602001015160600181815250505b50600101611390565b50506001600160a01b0380861660009081526003602090815260408083209388168352929052908120905b81548110156107d957600082828154811061153457611534612fde565b6000918252602090912060039091020154600160a01b900460ff16156116485782828154811061156657611566612fde565b600091825260209091206003909102015483546001600160a01b039091169063556d6e9f9085908590811061159d5761159d612fde565b9060005260206000209060030201600101548585815481106115c1576115c1612fde565b60009182526020909120600260039092020101546040516001600160e01b031960e085901b1681526004810192909252602482015260448101899052606401602060405180830381865afa15801561161d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116419190612fc5565b905061173c565b82828154811061165a5761165a612fde565b600091825260209091206003909102015483546001600160a01b0390911690635e0d443f9085908590811061169157611691612fde565b9060005260206000209060030201600101548585815481106116b5576116b5612fde565b60009182526020909120600260039092020101546040516001600160e01b031960e085901b168152600f92830b6004820152910b602482015260448101899052606401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190612fc5565b90505b808510156117b55780945060038460008151811061175c5761175c612fde565b602002602001015160400190600381111561177957611779612c46565b9081600381111561178c5761178c612c46565b8152505081846000815181106117a4576117a4612fde565b602002602001015160600181815250505b50600101611517565b600060606117f573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273dac17f958d2ee523a2206206994597c13d831ec785610f5f565b909250905060008061183073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273dac17f958d2ee523a2206206994597c13d831ec787610674565b9150915083821115611843578193508092505b5050915091565b6000546001600160a01b031633146118a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6001600160a01b0381166119205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161047a565b611929816127da565b50565b6000546001600160a01b031633146119865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b6001600160a01b03808416600090815260036020908152604080832093861683529290529081208054839081106119bf576119bf612fde565b6000918252602080832060408051608081018252600394850290920180546001600160a01b038082168552600160a01b90910460ff161515848601526001808301548585015260029092015460608501528a811687529484528186209489168652939092529220805492935091611a369190612ff4565b81548110611a4657611a46612fde565b600091825260208083206001600160a01b03808916855260038084526040808720928a168752919093529093208054919092029092019184908110611a8d57611a8d612fde565b6000918252602080832084546003938402909101805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b039384169081178355875460ff600160a01b918290041615150274ffffffffffffffffffffffffffffffffffffffffff19909216171781556001808701549082015560029586015495019490945587841683529081526040808320938716835292905220805480611b3557611b35613015565b6000828152602080822060036000199490940193840201805474ffffffffffffffffffffffffffffffffffffffffff1916815560018101839055600201919091559155604080516001600160a01b038781168252868116828501528451168183015291830151151560608084019190915290830151608083015282015160a08201527fbd80a18c53eb28e6164e147f0d72f465fafa745722072ee12e4194a73f93677f9060c001610c18565b60005b8151811015612740576000828281518110611c0157611c01612fde565b6020908102919091010151516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c769190612fc5565b90506000838381518110611c8c57611c8c612fde565b6020026020010151604001516003811115611ca957611ca9612c46565b03611e9857828281518110611cc057611cc0612fde565b60209081029190910101515160405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015611d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d52919061310f565b50604080516002808252606082018352600092602083019080368337019050509050838381518110611d8657611d86612fde565b60200260200101516000015181600081518110611da557611da5612fde565b60200260200101906001600160a01b031690816001600160a01b031681525050838381518110611dd757611dd7612fde565b60200260200101516020015181600181518110611df657611df6612fde565b6001600160a01b03909216602092830291909101909101526040516338ed173960e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d906338ed173990611e4e90859060009086903090429060040161312c565b6000604051808303816000875af1158015611e6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e959190810190613089565b50505b6001838381518110611eac57611eac612fde565b6020026020010151604001516003811115611ec957611ec9612c46565b036120b857828281518110611ee057611ee0612fde565b60209081029190910101515160405163095ea7b360e01b815273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015611f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f72919061310f565b50604080516002808252606082018352600092602083019080368337019050509050838381518110611fa657611fa6612fde565b60200260200101516000015181600081518110611fc557611fc5612fde565b60200260200101906001600160a01b031690816001600160a01b031681525050838381518110611ff757611ff7612fde565b6020026020010151602001518160018151811061201657612016612fde565b6001600160a01b03909216602092830291909101909101526040516338ed173960e01b815273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f906338ed17399061206e90859060009086903090429060040161312c565b6000604051808303816000875af115801561208d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120b59190810190613089565b50505b60028383815181106120cc576120cc612fde565b60200260200101516040015160038111156120e9576120e9612c46565b0361241a5760006002600085858151811061210657612106612fde565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061214657612146612fde565b6020026020010151602001516001600160a01b03166001600160a01b0316815260200190815260200160002084848151811061218457612184612fde565b602002602001015160600151815481106121a0576121a0612fde565b60009182526020808320604080518084018252939091015462ffffff1683528051610100810182528481529182018490528101839052606081018390526080810183905260a0810183905260c0810183905260e0810192909252915084848151811061220e5761220e612fde565b6020908102919091010151516001600160a01b03168152845185908590811061223957612239612fde565b6020908102919091018101518101516001600160a01b031690820152815162ffffff16604082015230606082015242608082015260a08101839052600060c0820181905260e0820152845185908590811061229657612296612fde565b60209081029190910101515160405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018590526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015612304573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612328919061310f565b50604080517f414bf38900000000000000000000000000000000000000000000000000000000815282516001600160a01b0390811660048301526020840151811660248301529183015162ffffff1660448201526060830151821660648201526080830151608482015260a083015160a482015260c083015160c482015260e083015190911660e482015273e592427a0aece92de3edee1f18e0157c058615649063414bf38990610104016020604051808303816000875af11580156123f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124169190612fc5565b5050505b600383838151811061242e5761242e612fde565b602002602001015160400151600381111561244b5761244b612c46565b036127375760006003600085858151811061246857612468612fde565b6020026020010151600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106124a8576124a8612fde565b6020026020010151602001516001600160a01b03166001600160a01b031681526020019081526020016000208484815181106124e6576124e6612fde565b6020026020010151606001518154811061250257612502612fde565b600091825260209182902060408051608081018252600390930290910180546001600160a01b038116845260ff600160a01b909104161515938301939093526001830154908201526002909101546060820152845190915084908490811061256c5761256c612fde565b602090810291909101015151815160405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af11580156125c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ed919061310f565b5080602001511561269b578051604080830151606084015191517f394747c5000000000000000000000000000000000000000000000000000000008152600481019190915260248101919091526044810184905260006064820181905260848201526001600160a01b039091169063394747c59060a401600060405180830381600087803b15801561267e57600080fd5b505af1158015612692573d6000803e3d6000fd5b50505050612735565b8051604080830151606084015191517f3df02124000000000000000000000000000000000000000000000000000000008152600f91820b600482015291900b602482015260448101849052600060648201526001600160a01b0390911690633df0212490608401600060405180830381600087803b15801561271c57600080fd5b505af1158015612730573d6000803e3d6000fd5b505050505b505b50600101611be4565b5050565b6040516001600160a01b0383166024820152604481018290526127d59084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526128c2565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061284c836001600160a01b0384166129a7565b90505b92915050565b600061284f825490565b600061284c83836129f6565b6040516001600160a01b03808516602483015283166044820152606481018290526128bc9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612789565b50505050565b6000612917826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a209092919063ffffffff16565b8051909150156127d55780806020019051810190612935919061310f565b6127d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161047a565b60008181526001830160205260408120546129ee5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561284f565b50600061284f565b6000826000018281548110612a0d57612a0d612fde565b9060005260206000200154905092915050565b6060612a2f8484600085612a39565b90505b9392505050565b606082471015612ab15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161047a565b843b612aff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047a565b600080866001600160a01b03168587604051612b1b919061318c565b60006040518083038185875af1925050503d8060008114612b58576040519150601f19603f3d011682016040523d82523d6000602084013e612b5d565b606091505b5091509150612b6d828286612b78565b979650505050505050565b60608315612b87575081612a32565b825115612b975782518084602001fd5b8160405162461bcd60e51b815260040161047a91906131a8565b80356001600160a01b0381168114612bc857600080fd5b919050565b600080600060608486031215612be257600080fd5b612beb84612bb1565b9250612bf960208501612bb1565b9150604084013590509250925092565b60008060408385031215612c1c57600080fd5b50508035926020909101359150565b600060208284031215612c3d57600080fd5b61284c82612bb1565b634e487b7160e01b600052602160045260246000fd5b6000604080830185845260206040602086015281865180845260609350606087019150602088016000805b83811015612ce757825180516001600160a01b039081168752878201511687870152888101516004808210612cc957634e487b7160e01b855260218152602485fd5b50868a01528701518786015260809094019391850191600101612c87565b50929a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612d3057612d30612cf7565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d5f57612d5f612cf7565b604052919050565b600067ffffffffffffffff821115612d8157612d81612cf7565b5060051b60200190565b60008060006060808587031215612da157600080fd5b8435935060208086013567ffffffffffffffff811115612dc057600080fd5b8601601f81018813612dd157600080fd5b8035612de4612ddf82612d67565b612d36565b81815260079190911b8201830190838101908a831115612e0357600080fd5b928401925b82841015612e74576080848c031215612e215760008081fd5b612e29612d0d565b612e3285612bb1565b8152612e3f868601612bb1565b8682015260408086013560048110612e575760008081fd5b908201528487013587820152825260809093019290840190612e08565b979a979950505050604095909501359450505050565b801515811461192957600080fd5b600080600083850360c0811215612eae57600080fd5b612eb785612bb1565b9350612ec560208601612bb1565b92506080603f1982011215612ed957600080fd5b50612ee2612d0d565b612eee60408601612bb1565b81526060850135612efe81612e8a565b60208201526080850135604082015260a0909401356060850152509093909250565b60008060008385036060811215612f3657600080fd5b612f3f85612bb1565b9350612f4d60208601612bb1565b92506020603f1982011215612f6157600080fd5b506040516020810181811067ffffffffffffffff82111715612f8557612f85612cf7565b604090815285013562ffffff81168114612f9e57600080fd5b815292959194509192509050565b600060208284031215612fbe57600080fd5b5035919050565b600060208284031215612fd757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561284f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008151808452602080850194506020840160005b838110156130655781516001600160a01b031687529582019590820190600101613040565b509495945050505050565b828152604060208201526000612a2f604083018461302b565b6000602080838503121561309c57600080fd5b825167ffffffffffffffff8111156130b357600080fd5b8301601f810185136130c457600080fd5b80516130d2612ddf82612d67565b81815260059190911b820183019083810190878311156130f157600080fd5b928401925b82841015612b6d578351825292840192908401906130f6565b60006020828403121561312157600080fd5b8151612a3281612e8a565b85815284602082015260a06040820152600061314b60a083018661302b565b6001600160a01b0394909416606083015250608001529392505050565b60005b8381101561318357818101518382015260200161316b565b50506000910152565b6000825161319e818460208701613168565b9190910192915050565b60208152600082518060208401526131c7816040850160208701613168565b601f01601f1916919091016040019291505056fea2646970667358221220945213e20705ce57d0c32a8f6b88b1ff17b672c068d3ff6473a24f4a9534b9a364736f6c63430008160033";

export class TokenSwapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenSwapper> {
    return super.deploy(overrides || {}) as Promise<TokenSwapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenSwapper {
    return super.attach(address) as TokenSwapper;
  }
  connect(signer: Signer): TokenSwapper__factory {
    return super.connect(signer) as TokenSwapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSwapperInterface {
    return new utils.Interface(_abi) as TokenSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSwapper {
    return new Contract(address, _abi, signerOrProvider) as TokenSwapper;
  }
}
